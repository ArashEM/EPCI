#!groovy
//********************************************************************************************                                                        
//	  ______                                __                ________  __       __ 
//	 /      \                              |  \              |        \|  \     /  \
//	|  $$$$$$\  ______   ______    _______ | $$____          | $$$$$$$$| $$\   /  $$
//	| $$__| $$ /      \ |      \  /       \| $$    \  ______ | $$__    | $$$\ /  $$$
//	| $$    $$|  $$$$$$\ \$$$$$$\|  $$$$$$$| $$$$$$$\|      \| $$  \   | $$$$\  $$$$
//	| $$$$$$$$| $$   \$$/      $$ \$$    \ | $$  | $$ \$$$$$$| $$$$$   | $$\$$ $$ $$
//	| $$  | $$| $$     |  $$$$$$$ _\$$$$$$\| $$  | $$        | $$_____ | $$ \$$$| $$
//	| $$  | $$| $$      \$$    $$|       $$| $$  | $$        | $$     \| $$  \$ | $$
//	 \$$   \$$ \$$       \$$$$$$$ \$$$$$$$  \$$   \$$         \$$$$$$$$ \$$      \$$
//	                                                                                
//	                                                                                
//	                        
//********************************************************************************************
pipeline{
    agent none 
    stages {
		// Build EPCI device driver 
        stage('build-driver'){
        agent {
            label 'dh-01'
        }
            steps {
                git 'https://github.com/ArashEM/EPCI.git'
                dir('FW/sources/driver'){
                    sh 'make clean'
                    sh 'make'
                }
                archiveArtifacts 'FW/sources/driver/build/*.ko'
            }   
        }
		
		// Build EPCI firmware for it's FPGA
		stage('synthesis-fw'){
		agent {
			label 'ise-01'
		}
			steps{
				git 'https://github.com/ArashEM/EPCI.git'
                dir('FW/sources/hdl'){
                    sh 'make clean'
                    sh 'make'
                }
                archiveArtifacts '/FW/sources/hdl/build/*.bit'
                archiveArtifacts '/FW/sources/hdl/build/*.mcs'
			}
		}
    }
    //post {
	//	cleanup {
	//	        node('dh-01'){
	//	            deleteDir()
	//	        }
	//			node('ise-01'){
	//				deleteDir()
	//			}
	//	}
	//}
}